/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vistas;

import AccesoADatos.BomberoData;
import AccesoADatos.BrigadaData;
import AccesoADatos.CuartelData;
import Entidades.Bombero;
import Entidades.Brigada;
import Entidades.Cuartel;
import java.awt.event.ItemEvent;
import java.sql.Date;
import java.time.ZoneId;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author Juan
 */
public class BomberoView extends javax.swing.JInternalFrame {
    
    /**
     * Creates new form BomberoView
     */
    public BomberoView() {
        initComponents();
       LlenarCBCuarteles();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jtNombre = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jtApellido = new javax.swing.JTextField();
        jtDNI = new javax.swing.JTextField();
        jtCelular = new javax.swing.JTextField();
        jdFechaNacimiento = new com.toedter.calendar.JDateChooser();
        jLabel8 = new javax.swing.JLabel();
        jbAgregar = new javax.swing.JButton();
        jbModificar = new javax.swing.JButton();
        jbBuscar = new javax.swing.JButton();
        jbSalir = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jcGrupoSanguineo = new javax.swing.JComboBox<>();
        jbBaja = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jbLimpiar = new javax.swing.JButton();
        jtEstado = new javax.swing.JTextField();
        jbAlta = new javax.swing.JButton();
        cbCuartel = new javax.swing.JComboBox<>();
        cbBrigada = new javax.swing.JComboBox<>();

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel1.setText("Nombre");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(79, 65, 136, 20));

        jtNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtNombreActionPerformed(evt);
            }
        });
        jPanel1.add(jtNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(219, 67, 230, -1));

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel2.setText("Apellido");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(79, 119, 136, 16));

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel3.setText("DNI");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(79, 159, 136, 24));

        jLabel4.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel4.setText("Fecha Nacimieto");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(79, 203, 136, 26));

        jLabel5.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel5.setText("Celular");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(79, 244, 136, 20));

        jLabel6.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel6.setText("Grupo sanguinio");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(79, 287, 136, 16));

        jLabel7.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel7.setText("Estado");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(79, 402, 136, 28));
        jPanel1.add(jtApellido, new org.netbeans.lib.awtextra.AbsoluteConstraints(219, 119, 230, -1));

        jtDNI.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtDNIKeyTyped(evt);
            }
        });
        jPanel1.add(jtDNI, new org.netbeans.lib.awtextra.AbsoluteConstraints(219, 163, 230, -1));
        jPanel1.add(jtCelular, new org.netbeans.lib.awtextra.AbsoluteConstraints(219, 246, 230, -1));

        jdFechaNacimiento.setBackground(new java.awt.Color(0, 0, 0));
        jPanel1.add(jdFechaNacimiento, new org.netbeans.lib.awtextra.AbsoluteConstraints(219, 206, 230, -1));

        jLabel8.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel8.setText("BOMBERO");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(312, 0, 133, -1));

        jbAgregar.setBackground(new java.awt.Color(153, 153, 153));
        jbAgregar.setText("Agregar");
        jbAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAgregarActionPerformed(evt);
            }
        });
        jPanel1.add(jbAgregar, new org.netbeans.lib.awtextra.AbsoluteConstraints(79, 454, 110, -1));

        jbModificar.setBackground(new java.awt.Color(153, 153, 153));
        jbModificar.setText("Modificar");
        jbModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbModificarActionPerformed(evt);
            }
        });
        jPanel1.add(jbModificar, new org.netbeans.lib.awtextra.AbsoluteConstraints(211, 454, 110, -1));

        jbBuscar.setBackground(new java.awt.Color(204, 204, 204));
        jbBuscar.setText("Buscar");
        jbBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBuscarActionPerformed(evt);
            }
        });
        jPanel1.add(jbBuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(473, 162, 110, -1));

        jbSalir.setBackground(new java.awt.Color(153, 153, 153));
        jbSalir.setText("Salir");
        jbSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalirActionPerformed(evt);
            }
        });
        jPanel1.add(jbSalir, new org.netbeans.lib.awtextra.AbsoluteConstraints(473, 454, 110, -1));

        jLabel9.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel9.setText("Brigada");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(81, 367, 136, -1));

        jcGrupoSanguineo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "", "A+", "B+", "0+", "AB+", "A-", "B-", "0-", "AB-" }));
        jPanel1.add(jcGrupoSanguineo, new org.netbeans.lib.awtextra.AbsoluteConstraints(219, 284, 230, 26));

        jbBaja.setText("Dar de Baja");
        jbBaja.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBajaActionPerformed(evt);
            }
        });
        jPanel1.add(jbBaja, new org.netbeans.lib.awtextra.AbsoluteConstraints(339, 454, 110, -1));

        jLabel11.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel11.setText("Cuartel");
        jPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(79, 328, 136, -1));

        jbLimpiar.setText("Limpiar Campos");
        jbLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbLimpiarActionPerformed(evt);
            }
        });
        jPanel1.add(jbLimpiar, new org.netbeans.lib.awtextra.AbsoluteConstraints(473, 203, 110, -1));

        jtEstado.setEditable(false);
        jPanel1.add(jtEstado, new org.netbeans.lib.awtextra.AbsoluteConstraints(219, 408, 138, -1));

        jbAlta.setText("Dar de Alta");
        jbAlta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAltaActionPerformed(evt);
            }
        });
        jPanel1.add(jbAlta, new org.netbeans.lib.awtextra.AbsoluteConstraints(473, 407, 110, -1));

        cbCuartel.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbCuartelItemStateChanged(evt);
            }
        });
        cbCuartel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                cbCuartelMousePressed(evt);
            }
        });
        cbCuartel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbCuartelActionPerformed(evt);
            }
        });
        jPanel1.add(cbCuartel, new org.netbeans.lib.awtextra.AbsoluteConstraints(219, 329, 230, -1));

        jPanel1.add(cbBrigada, new org.netbeans.lib.awtextra.AbsoluteConstraints(221, 368, 230, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 612, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 530, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jtNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtNombreActionPerformed
        
    }//GEN-LAST:event_jtNombreActionPerformed

    private void jbSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalirActionPerformed
   
          this.dispose();

    }//GEN-LAST:event_jbSalirActionPerformed

    private void jbBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBuscarActionPerformed
        BomberoData bd = new BomberoData();       
        Bombero b= new Bombero();
        BrigadaData brd= new BrigadaData();
        Brigada bb= new Brigada();
        //b = bd.buscarBomberoPorDni(jtDNI.getText());
        if ( jtDNI.getText().length()!=0) {
            b = bd.buscarBomberoPorDni(jtDNI.getText());
        }else{
            JOptionPane.showMessageDialog(null,"Complete el campo DNI");
        }
        if (b.getIdBombero()!=0 ) {
            jtNombre.setText(b.getNombre());
            jtApellido.setText(b.getApellido());
            jtCelular.setText(b.getCelular());
            jcGrupoSanguineo.setSelectedItem(b.getGrupoSanguineo() + "");
            jdFechaNacimiento.setDate(Date.valueOf(b.getFechaNac()));
            if (b.isEstado()) {
                jtEstado.setText("Activo"); 
            }else{
                jtEstado.setText("Inactivo");
            }
            if (b.getBrigada() != null) {
                cbCuartel.removeAllItems();
                LlenarCBCuarteles();
              
                cbCuartel.setSelectedItem(b.getBrigada().getCuartel().toString());
                cbBrigada.removeAllItems();
             
                LlenarCBBrigadas(b.getBrigada().getCuartel(), 2);
                cbBrigada.setSelectedItem(b.getBrigada().toString());
            }
        }
    }//GEN-LAST:event_jbBuscarActionPerformed

    private void jbBajaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBajaActionPerformed
        Bombero b = new Bombero();
        BomberoData bd = new BomberoData(); 
        
        if (jtDNI.getText().length()!=0) {
            b = bd.buscarBomberoPorDni(jtDNI.getText());
            if (b.getDni()!=null) {              
                 bd.darDeBajaBombero(b.getIdBombero());
                 jtEstado.setText("Inactivo");
            }                  
        }else{
            JOptionPane.showMessageDialog(null,"complete el campo el DNI");
        }
        limpiarCampos();
    }//GEN-LAST:event_jbBajaActionPerformed

    private void jtDNIKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtDNIKeyTyped
        char caracter=evt.getKeyChar();
        if ((caracter <'0' || caracter >'9')) {
            evt.consume();
        }
    }//GEN-LAST:event_jtDNIKeyTyped

    private void jbAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAgregarActionPerformed
        // TODO add your handling code here:
        ////CONFIRMAR VACANTES DE BRIGADAS
        BrigadaData brd = new BrigadaData(); 
        Bombero b = new Bombero();
        BomberoData bd = new BomberoData(); 
       
        b.setApellido(jtApellido.getText());
        b.setNombre(jtNombre.getText());
        b.setCelular(jtCelular.getText());
        b.setEstado(true);
        b.setDni(jtDNI.getText());
        b.setGrupoSanguineo((String) jcGrupoSanguineo.getSelectedItem());
        b.setFechaNac(jdFechaNacimiento.getDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate());
        if (cbBrigada.getSelectedItem()!=null) {
            
             ArrayList<Cuartel> cuarteles = new ArrayList<>();        
        CuartelData cd= new CuartelData();
        cuarteles = cd.listarCuartel();
        if (cbCuartel.getSelectedIndex()==0) {
            cbBrigada.removeAllItems();
            cbBrigada.addItem("Seleccione la Brigada");
        }
        if(cbCuartel.getSelectedIndex()!=0){
        int num = cbCuartel.getSelectedIndex()-1;
         Cuartel c= cuarteles.get(num);
            
            ArrayList<Brigada> brigadas = brd.listarBrigadasPorCuartel(c.getCodigo());   
            
            for (int i = 0; i < brigadas.size(); i++) {
                System.out.println(brigadas.get(i));
            }
            
            
            if(brigadas!=null){
              b.setBrigada(brigadas.get(cbBrigada.getSelectedIndex()));
              if (brd.comprobarCapacidadBrigada(brigadas.get(cbBrigada.getSelectedIndex()).getCodigo())) {
                 bd.guardarBombero(b);
                 limpiarCampos();
            }
             
 
        
               
            }else{
               JOptionPane.showMessageDialog(null,"La Brigada está completa. Elija otra Brigada");
               }    
        }else{
        JOptionPane.showMessageDialog(null,"Es necesario agregar al bombero en una Brigada");
        }
     
    }//GEN-LAST:event_jbAgregarActionPerformed
    }
    private void jbLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbLimpiarActionPerformed
        // TODO add your handling code here:
      limpiarCampos();
        
    }//GEN-LAST:event_jbLimpiarActionPerformed

    private void jbAltaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAltaActionPerformed
       Bombero b = new Bombero();
       BomberoData bd = new BomberoData();    
       BrigadaData brd = new BrigadaData(); 
        if (jtDNI.getText().length()!=0) {
            b = bd.buscarBomberoPorDni(jtDNI.getText());
            if (b.getDni()!=null) {   
                
                if (brd.comprobarCapacidadBrigada(b.getBrigada().getCodigo())){
                 bd.darDeAltaBombero(b.getIdBombero());
                 jtEstado.setText("Activo");
                }else{
                JOptionPane.showMessageDialog(null,"La Brigada ya está completa. Elija otra.");
                }
                
                
            }                  
        }else{
            JOptionPane.showMessageDialog(null,"complete el campo del DNI");
        }
        limpiarCampos();
    }//GEN-LAST:event_jbAltaActionPerformed

    private void jbModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbModificarActionPerformed
        
        //No Muestra el cuartel requerido
        
        Bombero b = new Bombero();
        BomberoData bd = new BomberoData();
        BrigadaData brd = new BrigadaData(); 
        if (jtDNI.getText().length() != 0) {
            if (jtNombre.getText().equals("") || jtApellido.getText().equals("") || jdFechaNacimiento == null || jtCelular.getText().equals("")||jcGrupoSanguineo.getSelectedIndex()==0){
            JOptionPane.showMessageDialog(null,"Busque el bombero correspondiente");
            }else {
            b.setNombre(jtNombre.getText());
            b.setApellido(jtApellido.getText());
            b.setFechaNac(jdFechaNacimiento.getDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate());
            b.setCelular(jtCelular.getText());
            b.setGrupoSanguineo(jcGrupoSanguineo.getSelectedItem().toString());
            
            
            CuartelData cd = new CuartelData();
            ArrayList<Cuartel> cuarteles = new ArrayList<>();
            cuarteles= cd.listarCuartel();
            Cuartel c = cuarteles.get(cbCuartel.getSelectedIndex()-1);
            ArrayList<Brigada>  brigadas = brd.listarBrigadasPorCuartel(c.getCodigo()); 
            
            b.setBrigada(brigadas.get(cbBrigada.getSelectedIndex()));
            
            
            
            b.setIdBombero(bd.buscarBomberoPorDni(jtDNI.getText()).getIdBombero());
            b.setDni(jtDNI.getText());
            b.setEstado(bd.buscarBomberoPorDni(jtDNI.getText()).isEstado());
            
             if (brd.comprobarCapacidadBrigada(b.getBrigada().getCodigo())){
            bd.modificarBombero(b);
            limpiarCampos();           
             }else{
               JOptionPane.showMessageDialog(null,"La Brigada está completa. Elija otra Brigada");
               }
             
            }
              
        }else{
             JOptionPane.showMessageDialog(null,"complete el campo del DNI");
        
        }
        
        
        
    }//GEN-LAST:event_jbModificarActionPerformed

    private void cbCuartelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbCuartelActionPerformed
       
       /*
        ArrayList<Cuartel> cuarteles = new ArrayList<>();        
        CuartelData cd= new CuartelData();
        cuarteles = cd.listarCuartel();
        
        int num = cbCuartel.getSelectedIndex()-1;
         Cuartel c= cuarteles.get(num);
        cbBrigada.removeAllItems();
        
        LlenarCBBrigadas(c);
     
     */
    }//GEN-LAST:event_cbCuartelActionPerformed

    private void cbCuartelItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbCuartelItemStateChanged
        ArrayList<Cuartel> cuarteles = new ArrayList<>();        
        CuartelData cd= new CuartelData();
        cuarteles = cd.listarCuartel();
        if (cbCuartel.getSelectedIndex()==0) {
            cbBrigada.removeAllItems();
            cbBrigada.addItem("Seleccione la Brigada");
        }
        if(cbCuartel.getSelectedIndex()!=0){
        int num = cbCuartel.getSelectedIndex()-1;
         Cuartel c= cuarteles.get(num);
 
        cbBrigada.removeAllItems();
        
        LlenarCBBrigadas(c, 2);
        
        }
    }//GEN-LAST:event_cbCuartelItemStateChanged

    private void cbCuartelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cbCuartelMousePressed
        // TODO add your handling code here:
       
        
    }//GEN-LAST:event_cbCuartelMousePressed
    
    private void LlenarCBCuarteles(){
      
        Cuartel c= new Cuartel();
        ArrayList<Cuartel> cuarteles = new ArrayList<>();        
        CuartelData cd= new CuartelData();
        cuarteles = cd.listarCuartel();
  
       cbCuartel.addItem("Seleccione el Cuartel");
        for (Cuartel cuartel : cuarteles) {
            cbCuartel.addItem(cuartel.toString());
        }
        cbBrigada.addItem("Seleccione la Brigada");
    }
    private void LlenarCBBrigadas(Cuartel cuartel, int f){
        Brigada b= new Brigada();
        ArrayList<Brigada> brigadas = new ArrayList<>();        
        BrigadaData bd= new BrigadaData();
        brigadas = bd.listarBrigadasPorCuartel(cuartel.getCodigo());
        if (f==1){
          cbBrigada.addItem("Seleccione la Brigada");
        }
      
        
        for (Brigada brigada : brigadas) {
            cbBrigada.addItem(brigada.toString());
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cbBrigada;
    private javax.swing.JComboBox<String> cbCuartel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton jbAgregar;
    private javax.swing.JButton jbAlta;
    private javax.swing.JButton jbBaja;
    private javax.swing.JButton jbBuscar;
    private javax.swing.JButton jbLimpiar;
    private javax.swing.JButton jbModificar;
    private javax.swing.JButton jbSalir;
    private javax.swing.JComboBox<String> jcGrupoSanguineo;
    private com.toedter.calendar.JDateChooser jdFechaNacimiento;
    private javax.swing.JTextField jtApellido;
    private javax.swing.JTextField jtCelular;
    private javax.swing.JTextField jtDNI;
    private javax.swing.JTextField jtEstado;
    private javax.swing.JTextField jtNombre;
    // End of variables declaration//GEN-END:variables
public void limpiarCampos(){
jtNombre.setText("");
        jtDNI.setText("");
        jtApellido.setText("");
        jtCelular.setText("");
        jcGrupoSanguineo.setSelectedIndex(0);
        jdFechaNacimiento.setDate(null);
        jtEstado.setText("");
        cbCuartel.removeAllItems();
        LlenarCBCuarteles();
        cbBrigada.removeAllItems();


}

}
